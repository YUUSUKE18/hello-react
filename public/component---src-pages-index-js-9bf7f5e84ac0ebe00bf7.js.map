{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js","webpack:///./src/pages/index.js"],"names":["Layout","children","data","siteTitle","site","siteMetadata","title","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","PostsListItem","post","frontmatter","fields","release_day","rewrite_day","key","className","to","slug","propsTypes","PropsTypes","object","PostsList","posts","edges","map","index","node","pageQuery","IndexPage"],"mappings":"0JAsCeA,IAxBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,6BACE,kBAAC,IAAD,CAAQC,UAAWD,EAAKE,KAAKC,aAAaC,QAC1C,8BAAOL,GACP,kBAAC,IAAD,S,qFCjBN,SAASM,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMJ,EAAS,EAATA,MAC9BF,EADuC,OACvCA,KAcFO,EAAkBH,GAAeJ,EAAKC,aAAaG,YAEzD,OACE,kBAAC,IAAD,CACEI,eAAgB,CACdH,QAEFH,MAAOA,EACPO,cAAa,QAAUT,EAAKC,aAAaC,MACzCI,KAAM,CACJ,CACEI,KAAK,cACLC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAAST,GAEX,CACEU,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASX,EAAKC,aAAaY,QAE7B,CACEH,KAAK,gBACLC,QAAST,GAEX,CACEQ,KAAK,sBACLC,QAASJ,IAEXO,OAAOR,KAKfH,EAAIY,aAAe,CACjBV,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,qKCnFTa,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,OACbjB,EAAoCgB,EAApChB,MAAOkB,EAA6BF,EAA7BE,YAAaC,EAAgBH,EAAhBG,YAC5B,OACE,wBAAIC,IAAKpB,EAAOqB,UAAU,2CACxB,kBAAC,OAAD,CAAMC,GAAIL,EAAOM,MACf,wBAAIF,UAAU,0BAA0BrB,GACxC,yBAAKqB,UAAU,QACb,0BAAMA,UAAU,8BAAhB,QACQH,GAER,0BAAMG,UAAU,yBAAhB,OAA6CF,OAOvDL,EAAcU,WAAa,CACzBR,YAAaS,IAAWC,QAGXZ,QCNAa,EAhBG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,6BACE,wBAAIP,UAAU,8CACXO,EAAMC,MAAMC,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KAClB,OAAO,kBAAC,EAAD,CAAeZ,IAAKW,EAAOhB,KAAMiB,UCOrCC,EAAS,aAoBPC,UA7BG,SAAC,GAAc,IAAZtC,EAAW,EAAXA,KACnB,OACE,kBAACF,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKM,MAAM,SACX,kBAAC,EAAD,CAAW4B,MAAOhC,EAAKgC","file":"component---src-pages-index-js-9bf7f5e84ac0ebe00bf7.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n      <Footer />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\";\nimport PropsTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst PostsListItem = ({ post }) => {\n  const { frontmatter, fields } = post;\n  const { title, release_day, rewrite_day } = frontmatter;\n  return (\n    <li key={title} className=\"mt-4 hover:text-gray-500 cursor-pointer\">\n      <Link to={fields.slug}>\n        <h2 className=\"text-3xl font-semibold\">{title}</h2>\n        <div className=\"date\">\n          <span className=\"mr-2 text-sm text-gray-500\">\n            公開日: {release_day}\n          </span>\n          <span className=\"text-sm text-gray-500\">更新日:{rewrite_day}</span>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nPostsListItem.propsTypes = {\n  frontmatter: PropsTypes.object,\n};\n\nexport default PostsListItem;\n","import React from \"react\";\nimport PropsTypes from \"prop-types\";\nimport PostsListItem from \"./PostsListItem\";\n\nconst PostsList = ({ posts }) => {\n  return (\n    <div>\n      <ul className=\"flex-col mx-auto px-8 mt-5 max-w-screen-lg\">\n        {posts.edges.map(({ node }, index) => {\n          return <PostsListItem key={index} post={node} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropsTypes.object.isRequired,\n};\n\nexport default PostsList;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport PostsList from \"../components/PostsList\";\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <PostsList posts={data.posts} />\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query BlogPost {\n    posts: allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            title\n            description\n            release_day\n            rewrite_day\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}